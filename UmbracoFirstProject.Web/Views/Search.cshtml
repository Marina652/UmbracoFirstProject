@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Search>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@using Umbraco.Cms.Core;
@inject IPublishedContentQuery _publishedContentQuery;

@{
    Layout = "Main.cshtml";
    
    var heroImage = Model.Value<IPublishedContent>("heroImage")?.Url() ?? "";
    var heroOverlayColour = Model.Value<string>("heroOverlayColour");

    var searchQuery = HttpContextAccessor.HttpContext.Request.Query["query"];
    IEnumerable<PublishedSearchResult> searchResults;
    var resultsCount = 0;

    if(!string.IsNullOrEmpty(searchQuery)) {
     
        searchResults = _publishedContentQuery.Search(searchQuery, string.Empty, "InternalIndex")
            .Where(w => w.Content.IsDocumentType("newsArticle"));

	    resultsCount = searchResults != null && searchResults.Any() ? searchResults.Count() : 0;	
	}
	else {
	    searchResults = null;
	}
}

@if(!string.IsNullOrEmpty(heroOverlayColour)) {
    <style>
        .home-hero > .overlay {
            background-color: #@heroOverlayColour !important;
            opacity: 0.5;
        }
    </style>
}  

<!-- Render the search box -->
<header class="jumbotron jumbotron-fluid home-hero" style="background-image:url('@heroImage')">
    <div class="overlay"></div>
    <div class="inner">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-md-10 mx-auto">
                    <h1>Search</h1>
                     <form action="@Model.Url()" method="Get">
                        <fieldset>
                            <input type="text" class="search-box" placholder="Search..." name="query"></input>
                            <button class="search-button">Search</button>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
</header>

<section class="container">
    <h1>Search results</h1>

    @if(!string.IsNullOrEmpty(searchQuery)) {
        <div class="row">
            <div class="col">
                @if(resultsCount == 0 || searchResults == null){
                    <text>
                        No results were found for @searchQuery
                    </text>
                } 
                else {
                    <text>
                        We found @resultsCount result(s).
                    </text>
                        <ul>
                        @foreach(var result in searchResults)
                        {
                            <li>
                                <h3>
                                    <a href="@result.Content.Url()">@result.Content.Name</a>
                                </h3>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    }
</section>
