@using UmbracoFirstProject.Web.ViewModel;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<UmbracoFirstProject.Web.ViewModel.AccountViewModel>
@model AccountViewModel;
@{
    
}

<div class="container">
    <div class="row">
        <div class="col">
            <h2>My Account</h2>

                @if (TempData["status"] != null)
                {
                    if ((string)TempData["status"] == "Updated Details")
                    {
                        <p>Your details have been updated.</p>
                    }
                    else
                    {
                    <p>Thanks for changing your password.</p>
                }
            }
            else
            {
                    @Html.ValidationSummary()

                    <form asp-action="HandleUpdateDetails" asp-controller="Account">
                        <h2 class="h3">Fill in the details below to register:</h2>

                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name, new {@class="form-control", @type="text"})
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new {@class="form-control", @type="text"})
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>

                        <button type="submit" value="Update Details" name="update-button" @*class="btn btn-primary"*@>Update</button>

                    </form>

                    <!-- Password Changed form-->
                    <form asp-action="HandlePasswordChange" asp-controller="Account">
                        @*<h2 class="h3">Fill in the details below to register:</h2>*@

                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(m => m.Name)
                        @Html.HiddenFor(m => m.Email)
                        @Html.HiddenFor(m => m.UserName)

                        <div class="form-group">
                            @Html.LabelFor(m => m.Password)
                            @Html.TextBoxFor(m => m.Password, new {@class="form-control", @type="password", @autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword)
                            @Html.TextBoxFor(m => m.ConfirmPassword, new {@class="form-control", @type="password", @autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>

                        <button type="submit" value="Change Password" name="password-button" @*class="btn btn-primary"*@>Change Password</button>

                    </form>
            }
        </div>
    </div>
</div>